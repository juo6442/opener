#!/usr/bin/env python3
#170125
import os, sys
import tty, termios
import fcntl, struct

COLOR_BLACK = "\033[30m"
COLOR_BG_CYAN = "\033[46m"
COLOR_RESET = "\033[0;0m"
CLEAR_LINE = "\033[K"

KEY_ESC = "\x1B"
KEY_RETURN = "\x0D"

def manual():
	print("Usage: opn [command ...] [keyword]")
	print("The last paramater will be used as [keyword] for subdirectory searching.")
	print("[command ...] will be applied to the selected file.")

def search(keyword):
	result = []
	for (root, dirs, files) in os.walk("."):
		result_curdir = filter(lambda file: keyword in file, files)
		result += map(lambda x: os.path.join(root, x), result_curdir)

	return result

def terminal_size():
	th, tw, hp, wp = struct.unpack("HHHH", fcntl.ioctl(0, termios.TIOCGWINSZ, struct.pack("HHHH", 0, 0, 0, 0)))
	return (tw, th)

def print_files(l, height, pos):
	start = pos - int(height / 2);
	start = min(len(l) - height, start)
	start = max(0, start)
	end = start + min(len(l), height)

	for i in range(start, end):
		print(CLEAR_LINE, end = "")

		if i == pos:
			print(COLOR_BLACK + COLOR_BG_CYAN, end = "")

		print(l[i], end = "")

		if i == pos:
			print(COLOR_RESET, end = "")

		print("")

#TODO: Handle arrow keys (len=3)
def get_key():
	fd = sys.stdin.fileno()
	old_settings = termios.tcgetattr(fd)

	try:
		tty.setraw(sys.stdin.fileno())
		return sys.stdin.read(1)
	finally:
		termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)

def ui(l):
	height = terminal_size()[1] - 1
	pos = 0

	while True:
		print_files(l, height, pos)

		k = get_key()
		if   k == "k" or k == "\x1b[A": pos -= 1
		elif k == "j" or k == "\x1b[B": pos += 1
		elif k == "h" or k == "\x1b[D": pos = max(0, pos - int(height / 2))
		elif k == "l" or k == "\x1b[C": pos = min(len(l) - 1, pos + int(height / 2))
		elif k == "q" or k == KEY_ESC: break
		elif k == KEY_RETURN:
			run_command(l[pos])
			break;

		pos %= len(l)
		pos_moveup = min(len(l), height)
		print("\033[" + str(pos_moveup) + "A", end = "")

def run_command(s):
	cmds = sys.argv[1:-1] + ["\"" + s + "\""]
	os.system(" ".join(cmds))

try:
	if len(sys.argv) <= 1:
		manual()
		exit()

	result = search(sys.argv[-1])
	if len(result) <= 0:
		exit()

	ui(result)

except (KeyboardInterrupt, SystemExit):
	exit()
